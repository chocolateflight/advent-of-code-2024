from pathlib import Path # Import the Path class for working with file paths
import itertools # Import itertools for advanced iterator operations

# Define the path to the input file relative to the current script
file_path = Path(__file__).with_name("input.txt")

# Open the file in read mode and read all lines into a list
with file_path.open("r") as f:
    file_content = f.readlines() # Reads each line as a string and stores them in a list

# -----Code Part 1-----
# Parse the input file into a list of lists of integers
# Each line in the file is split into integers and stripped of whitespace
part1_content = [list(map(int, line.strip().split())) for line in file_content]

# Create a 'safety' matrix by computing the pairwise differences for each report (row)
# Pairwise differences are calculated between consecutive numbers in each report
safety = [
    [int(a) - int(b) for a, b in itertools.pairwise(report)] # Calculate differences
    for report in part1_content # Iterate over each report (row)
]

# Filter the 'safety' matrix based on specific criteria:
# 1. All differences in a sublist must be either positive or negative
# 2. All differences must have an absolute value between 1 and 3 (inclusive)
filtered_safety = [
    sublist for sublist in safety # Iterate over each sublist in the 'safety' matrix
    if (all(x > 0 for x in sublist) or all(x < 0 for x in sublist)) # Check sign consistency
    and all(1 <= abs(x) <= 3 for x in sublist) # Check if differences are within bounds
]

# Print the count of sublists that meet the criteria
print(len(filtered_safety))

# -----Code Part 2-----
#tbd - Not solved in time

# -----AI Disclaimer-----
# This code for this challenge was written without the help of AI. The comments, which have been added for documentation purposes, were generated by ChatGPT.